[
  {
    "title": "Portfolio Website",
    "image": "img/pf.png",
    "short": "Mijn portfolio website waarin projecten dynamisch worden geladen met JavaScript en JSON, gehost via GitHub.",
    "details": "Op deze website kunnen bezoekers mijn projecten bekijken en doorklikken naar de bijbehorende webpagina’s of GitHub-repositories. Daarnaast bevat de site informatie over mijzelf, mijn cv en links naar mijn GitHub- en LinkedIn-profiel. Bezoekers kunnen eenvoudig contact met mij opnemen via e-mail. De website wordt regelmatig bijgewerkt om de gebruiksvriendelijkheid en codekwaliteit te verbeteren.",
    "learned": "Ik heb geleerd hoe je met JSON en JavaScript dynamisch data kunt laden op een website en hoe je een project kunt hosten via GitHub Pages.",
    "tech": "HTML, CSS, JavaScript, JSON",
    "techDisplay": "HTML, CSS, JavaScript, JSON",
    "category": "personal, web",
    "link": "https://github.com/DcamiWraithDev/dcamiwraithdev.github.io "
  },
    {
    "title": "Opendag Applicatie",
    "image": "img/oda.png",
    "short": "Data tonen en beheren met behulp van CSV-bestanden",
    "details": "In dit project heb ik met C# WinForms een applicatie ontwikkeld die data uit CSV-bestanden kan uitlezen, weergeven en toevoegen via een gebruiksvriendelijke interface.",
    "learned": "Geleerd hoe je CSV-data kunt uitlezen, verwerken en integreren in een C#-applicatie.",
    "tech": "C-Sharp, CSV, Winforms",
    "techDisplay": "C#, CSV, Winforms",
    "category": "app",
    "link": "https://github.com/DcamiWraithDev/OpendagApp"
  },
  {
    "title": "Studie Dashboard",
    "image": "img/sdb.png",
    "short": "Data uitlezen en filteren uit een database",
    "details": "In dit project heb ik geleerd hoe je een ERD (Entity Relationship Diagram) opstelt en hoe je met meerdere databasetabellen werkt. Daarnaast heb ik losse SQL-query’s geschreven en een duidelijke mappenstructuur opgezet met aparte classes per tabel en database model voor beter onderhoudbare code.",
    "learned": "Het opzetten van een databaseverbinding in C# met behulp van externe classes en projectstructuren.",
    "tech": "C-Sharp, SQL, Winforms",
    "techDisplay": "C#, SQL, Winforms",
    "category": "app",
    "link": "https://github.com/DcamiWraithDev/Studie_Dashboard"
  },
  {
    "title": "Groenten Boer",
    "image": "img/gb.png",
    "short": "T.B.A.",
    "details": "T.B.A.",
    "learned": "T.B.A.",
    "tech": "C-Sharp, SQL, Winforms",
    "techDisplay": "C#, SQL, Winforms",
    "category": "app",
    "link": "unavailable.html"
  },
  {
    "title": "Weer API",
    "image": "img/wapi.png",
    "short": "Weergegevens ophalen en tonen met de WeerLive API in een C# WinForms-applicatie",
    "details": "In dit project heb ik een C# WinForms-applicatie ontwikkeld die actuele weerinformatie ophaalt via de WeerLive API. De data wordt in JSON-formaat ingeladen, verwerkt en overzichtelijk weergegeven in de interface. Hiervoor heb ik gebruikgemaakt van aparte classes binnen de applicatie om de JSON-structuur te parsen en de API-data efficiënt te beheren.",
    "learned": "Het werken met externe API’s, het verwerken van JSON-data en het dynamisch tonen van gegevens in C# WinForms.",
    "tech": "C-Sharp, JSON, API, Winforms",
    "techDisplay": "C#, JSON, API, Winforms",
    "category": "app",
    "link": "https://github.com/DcamiWraithDev/Weer_API"
  },
  {
    "title": "2D Topdown Shooter Game",
    "image": "img/tdsg.png",
    "short": "T.B.A.",
    "details": "T.B.A.",
    "learned": "T.B.A.",
    "tech": "C-Sharp, Unity, 2d,",
    "techDisplay": "C#, Unity, 2d",
    "category": "game",
    "link": "unavailable.html"
  },
  {
    "title": "Local Multiplayer Game",
    "image": "img/lmgame.png",
    "short": "T.B.A.",
    "details": "T.B.A.",
    "learned": "T.B.A.",
    "tech": "C-Sharp, Unity, 2d,",
    "techDisplay": "C#, Unity, 2d",
    "category": "game",
    "link": "unavailable.html"
  },
  {
    "title": "Netflix Clone",
    "image": "img/nfc.png",
    "short": "Een eenvoudige Netflix-clone ontwikkeld als groepsproject met HTML, CSS, JavaScript en Bootstrap.",
    "details": "Dit groepsproject had als doel om de lay-out en basisfunctionaliteiten van Netflix na te bouwen met behulp van HTML, CSS, JavaScript en Bootstrap. Het project hoefde niet volledig functioneel te zijn, maar richtte zich vooral op het nabouwen van de interface, samenwerking binnen het team en het efficiënt verdelen van taken binnen een korte ontwikkelperiode van twee weken.",
    "learned": "Ervaring opgedaan met teamwork, het gebruik van Bootstrap en het vertalen van bestaande webontwerpen naar een werkende front-end.",
    "tech": "HTML, CSS, JavaScript, Bootstrap",
    "techDisplay": "HTML, CSS, JavaScript, Bootstrap",
    "category": "web",
    "link": "unavailable.html"
  },
  {
    "title": "W.I.P.",
    "image": "img/pf.png",
    "short": "W.I.P.",
    "details": "W.I.P.",
    "learned": "W.I.P.",
    "tech": "HTML, CSS, JavaScript, SQL, PHP",
    "techDisplay": "HTML, CSS, JavaScript, SQL, PHP",
    "category": "web, other",
    "link": "unavailable.html"
  }
]
